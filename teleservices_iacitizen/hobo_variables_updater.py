"""
Used by ./install_first.py to create or update Hobo variables related to iA.Citizen installation.

Usage to run it manually (it's theoretically not needed, as it's automatically run by ./install_first.py):

    sudo -u hobo hobo-manage tenant_command runscript \
        -d demo-hobo.guichet-citoyen.be \
        /opt/publik/scripts/scripts_teleservices/build-e-guichet/hobo_create_variables.py
"""

import json

from hobo.environment.models import Variable


def create_or_update_variable(name, label, value):
    """
    Create or update a variable.

    Usage :

        create_or_update_variable("queuefair", "Queue-Fair activé", "True")
    """
    variable, created = Variable.objects.update_or_create(name=name, defaults={"label": label, "value": value})
    if created:
        print(f"Variable '{variable}' has been created.")
    else:
        print(f"Variable '{variable}' has been updated.")


def load_json_config():
    try:
        with open("./hobo_variables.json") as json_file:
            return json.load(json_file)
    except FileNotFoundError:
        return {}


hobo_variables = load_json_config()

for name, value in hobo_variables.items():
    create_or_update_variable(name, value["label"], value["value"])
    print(f"Variable '{name}' has been created or updated.")
    print(f"Label: '{value['label']}'")
    print(f"Value: '{value['value']}'")
    print("\n")

# Example of JSON file hobo_variables.json:
# This should be handled / generated by the installer, not manually.
# {
#     "queuefair": {
#         "label": "Queue-Fair activé",
#         "value": "True"
#     },
#     "some_other_variable": {
#         "label": "Some other variable",
#         "value": "False"
#     }
# }
